<template>
	<view class="container">
		<!-- 顶部导航栏 -->
		<view class="nav-bar">
			<view class="back-btn" @click="goBack">
				<text class="back-icon">←</text>
			</view>
			<text class="title">AI医生问答</text>
		</view>

		<!-- 聊天区域 -->
		<scroll-view class="chat-area" scroll-y="true" :scroll-top="scrollTop" @scrolltoupper="loadMoreHistory">
			<view class="chat-list">
				<view class="chat-item" v-for="(item, index) in chatList" :key="index"
						:class="{'ai': item.type === 'ai'}">
					<image :src="item.type === 'ai' ? '/static/icons/ai-doctor.png' : '/static/icons/user.png'"
							class="avatar"></image>
					<view class="message">{{ item.content }}</view>
				</view>
			</view>
		</scroll-view>

		<!-- 快捷问题 -->
		<view class="quick-questions" v-if="showQuickQuestions">
			<view class="question-item" v-for="(question, index) in quickQuestions" :key="index"
					@click="sendQuestion(question)">
				{{ question }}
			</view>
		</view>

		<!-- 输入区域 -->
		<view class="input-area">
			<input type="text" v-model="inputMessage" placeholder="请输入您的问题" class="input"
					@confirm="sendMessage" />
			<view class="send-btn" @click="sendMessage">发送</view>
		</view>
	</view>
</template>

<script setup lang="uts">
import { ref, onMounted, nextTick } from 'vue'

// 聊天记录
const chatList = ref([
	{
		type: 'ai',
		content: '您好！我是您的AI健康顾问，很高兴为您服务。请问有什么我可以帮您的吗？'
	}
])

// 快捷问题
const quickQuestions = ref([
	'最近总是失眠怎么办？',
	'感冒发烧吃什么药好？',
	'如何预防高血压？',
	'运动后肌肉酸痛怎么缓解？'
])

// 输入消息
const inputMessage = ref('')
const scrollTop = ref(0)
const showQuickQuestions = ref(true)

// 返回上一页
const goBack = () => {
	uni.navigateBack({
		delta: 1,
		fail: (err) => {
			console.error('返回失败：', err)
			uni.switchTab({
				url: '/pages/index/index'
			})
		}
	})
}

// 发送消息
const sendMessage = () => {
	if (!inputMessage.value.trim()) return

	// 添加用户消息
	chatList.value.push({
		type: 'user',
		content: inputMessage.value
	})

	// 隐藏快捷问题
	showQuickQuestions.value = false

	// 清空输入框
	inputMessage.value = ''

	// 滚动到底部
	nextTick(() => {
		scrollToBottom()
	})

	// 模拟AI回复
	setTimeout(() => {
		chatList.value.push({
			type: 'ai',
			content: '感谢您的咨询。我正在分析您的问题，请稍等...'
		})
		scrollToBottom()
	}, 500)
}

// 发送快捷问题
const sendQuestion = (question: string) => {
	inputMessage.value = question
	sendMessage()
}

// 加载更多历史记录
const loadMoreHistory = () => {
	// TODO: 实现加载更多历史记录的功能
}

// 滚动到底部
const scrollToBottom = () => {
	nextTick(() => {
		const query = uni.createSelectorQuery()
		query.select('.chat-list').boundingClientRect()
		query.exec((res) => {
			scrollTop.value = res[0].height
		})
	})
}

// 页面加载完成
onMounted(() => {
	console.log('AI医生问答页面加载完成')
})
</script>

<style>
.container {
	display: flex;
	flex-direction: column;
	height: 100vh;
	background-color: #f7f7f7;
}

.nav-bar {
	display: flex;
	align-items: center;
	padding: 20rpx;
	background-color: #fff;
	border-bottom: 1rpx solid #f5f5f5;
}

.back-btn {
	padding: 20rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

.back-icon {
	font-size: 40rpx;
	color: #333;
	font-weight: bold;
}

.title {
	flex: 1;
	text-align: center;
	font-size: 32rpx;
	font-weight: bold;
	color: #333;
}

.chat-area {
	flex: 1;
	padding: 20rpx;
}

.chat-list {
	padding-bottom: 20rpx;
}

.chat-item {
	display: flex;
	margin-bottom: 30rpx;
}

.chat-item.ai {
	flex-direction: row;
}

.chat-item.user {
	flex-direction: row-reverse;
}

.avatar {
	width: 80rpx;
	height: 80rpx;
	border-radius: 40rpx;
	margin: 0 20rpx;
}

.message {
	max-width: 70%;
	padding: 20rpx;
	border-radius: 20rpx;
	font-size: 28rpx;
	line-height: 1.5;
}

.ai .message {
	background-color: #fff;
	color: #333;
}

.user .message {
	background-color: #4A90E2;
	color: #fff;
}

.quick-questions {
	padding: 20rpx;
	background-color: #fff;
	border-top: 1rpx solid #f5f5f5;
}

.question-item {
	display: inline-block;
	padding: 10rpx 20rpx;
	margin: 10rpx;
	background-color: #f0f0f0;
	border-radius: 30rpx;
	font-size: 24rpx;
	color: #666;
}

.input-area {
	display: flex;
	align-items: center;
	padding: 20rpx;
	background-color: #fff;
	border-top: 1rpx solid #f5f5f5;
}

.input {
	flex: 1;
	height: 72rpx;
	background-color: #f7f7f7;
	border-radius: 36rpx;
	padding: 0 30rpx;
	font-size: 28rpx;
	margin-right: 20rpx;
}

.send-btn {
	width: 120rpx;
	height: 72rpx;
	background-color: #4A90E2;
	color: #fff;
	font-size: 28rpx;
	border-radius: 36rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}
</style> 